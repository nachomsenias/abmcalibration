# Congiguration for Differential Evolution 1/best

# GENERIC PARAMETERS
# ==================================================
# Number of threads for parallel computation
breedthreads	= 1
evalthreads	= 1

# For restoring from unexpected interruptions
checkpoint		= false
checkpoint-prefix	= ec
checkpoint-modulo	= 1

# Type of state for evolution and breeders
state		= ec.simple.SimpleEvolutionState

pop		= ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher
breed		= ec.de.Best1BinDEBreeder
breed.f 	= 0.5
#breed.cr	= 0.5
breed.cr	= 0.9
breed.f-noise	= 0.001
breed.out-of-bounds-retries = 5
eval		= ec.de.DEEvaluator
stat		= ec.simple.SimpleStatistics
exch		= ec.simple.SimpleExchanger

# Seed for the random number generator
seed.0		= 4357


# SPECIFIC PARAMETERS
# ==================================================
# Population
pop.subpops		= 1
pop.subpop.0		= ec.Subpopulation
pop.subpop.0.size 		= 100
pop.subpop.0.duplicate-retries 	= 0

# Type of data
pop.subpop.0.species 		= ec.vector.FloatVectorSpecies
pop.subpop.0.species.ind	= ec.vector.DoubleVectorIndividual
pop.subpop.0.species.min-gene	= 0
pop.subpop.0.species.max-gene 	= 500
pop.subpop.0.species.fitness 	= ec.simple.SimpleFitness
pop.subpop.0.species.mutation-bounded = true

# Stopping criteria
#generations		= 200
evaluations		= 10000
quit-on-run-complete	= true

# Elitism in the replacement
breed.elite.0 = 5

# Evaluation function
eval.problem		= EcjModelEvaluation


# LOG INFO
# ==================================================
# Standard ecj statistics
stat.file		= $out.stat
stat.child.0.activate  = true
stat.child.0.generations  = 5
stat.num-children = 5

# Custom statistics for using the initial model as solution
stat.child.0 = EcjInitialSolution

# Custom statistics for having snapshots
stat.child.1 = EcjStatisticsSnapshot
stat.child.1.activate = true
stat.child.1.generations = 10

# Custom statistics for having evolution data
stat.child.2 = EcjStatisticsPopulation
stat.child.2.activate	= true
stat.child.2.generations	= 1

# Trick to use restarts in the population
stat.child.3	= EcjSteadyRestart
stat.child.3.activate	= true
stat.child.3.max-restarts	= 10
stat.child.3.min-generations	= 10
stat.child.3.max-generations	= 10
stat.child.3.threshold	= 0.0001

# Hill Climbing strategy
stat.child.4 = EcjLocalSearch
stat.child.4.type = hill-climbing
stat.child.4.frequency	= always
stat.child.4.target = 0.0625
stat.child.4.step = 1
stat.child.4.max-iterations = 100
stat.child.4.max-evaluations = 50
stat.child.4.threshold = 0.001
stat.child.4.neighborhood = single-step

# DUMMY (but needed) PARAMETERS
# ==================================================
# Breeding scheme
pop.subpop.0.species.pipe			= ec.breed.ReproductionPipeline
pop.subpop.0.species.pipe.source.0		= ec.select.FirstSelection

pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.0.size= 2
pop.subpop.0.species.pipe.source.0.source.1 = same

# Crossover operator
pop.subpop.0.species.crossover-type	= one

# Mutation operator
pop.subpop.0.species.mutation-type	= reset
pop.subpop.0.species.mutation-prob	= 1.0
